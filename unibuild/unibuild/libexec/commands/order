#!/bin/sh -e
#
# order - Dump the build order, optionally for a bundle.
#

. "${UNIBUILD}/common"

help()
{
    cat <<EOF
Usage: ${WHOAMI} [ OPTIONS ]

OPTIONS:

  --buildable  Include only packages that will build on this platform
  --bundle B   Include only bundle B, 'none' for packages in no bundle
  --file F     Take input from file F

EOF
}

BUNDLE=
BUILDABLE_FILTER=cat
FILE=unibuild-order

while [ "$1" ]
do
    case "$1" in

	--bundle)
	    BUNDLE="$2"
	    shift
	    shift
	    ;;

	--file)
	    FILE="$2"
	    shift
	    shift
	    ;;

	--buildable)
	    BUILDABLE_FILTER=buildable_filter
	    shift
	    ;;

	--help)
	    help
	    exit 0
	    ;;

	--*)
	    die "Unknown option '$1'"
	    ;;

	*)
	    die "Unknown argument '$1'"
	    ;;
    esac
done


dirs_exist()
{
    DIR=$(dirname "${FILE}")
    LIST="${TMPBASE}.exist"
    while read LINE
    do
        CANDIDATE="${DIR}/${LINE}"
	[ -d "${CANDIDATE}" ] \
	    || die "${FILE}: ${LINE}: No such directory"
	echo "${LINE}" >> "${LIST}"
    done
    cat "${LIST}"
}

buildable_filter()
{
    DIR=$(dirname "${FILE}")
    while read LINE
    do
	if find "${DIR}/${LINE}" -type d \
		| grep -F -v '/unibuild-work/' \
		| grep -E -q -e "/unibuild-packaging/${OSINFO_PACKAGING}\$"
	then
	    echo "${LINE}"
	fi
    done
}

[ "${FILE}" != '-' -a ! -r "${FILE}" ] \
    && die "No ${FILE} file.  Not doing anything."

cat ${FILE} | build_order "${BUNDLE}" | dirs_exist | $BUILDABLE_FILTER

exit 0
