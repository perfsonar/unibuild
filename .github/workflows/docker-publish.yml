name: Unbuild Docker Environments

# This action builds Docker images of unibuild for
# various OSes and then pushes result to GitHub
# Container Registry.

on:
  push:
    branches: [ '*' ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ 'main' ]
  workflow_dispatch:
    branches: [ '*' ]
    tags: [ 'v*.*.*' ]

env:
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_BASE: ${{ github.repository }}


jobs:
  build:
    # Iterates through each OS using a matrix strategy
    # See https://docs.github.com/en/actions/using-jobs/using-a-matrix-for-your-jobs
    strategy:
      fail-fast: true
      matrix:
        os: [ 'ol8', 'el9', 'el10b', 'd11', 'd12', 'u20', 'u22', 'u24' ]

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_BASE }}/${{ matrix.os }}
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker images
        id: build-and-push
        if: ${{ matrix.os == 'ol8'|| matrix.os == 'el9' || matrix.os == 'el10b' }}
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./docker-envs/Dockerfile-${{ matrix.os }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker multiarch images
        id: build-and-push-multiarch
        if: ${{ matrix.os == 'd11' || matrix.os == 'd12' || matrix.os == 'u20' || matrix.os == 'u22' || matrix.os == 'u24' }}
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./docker-envs/Dockerfile-${{ matrix.os }}
          platforms: linux/amd64, linux/arm64, linux/arm/v7, linux/ppc64le
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

